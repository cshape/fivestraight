{"version":3,"sources":["components/Square.js","components/Board.js","components/Card.js","components/CardHand.js","components/InfoPane.js","components/Game.js","App.js","index.js"],"names":["Square","onClick","displayNumber","color","style","background","border","fontSize","fontWeight","cursor","outline","borderRadius","width","height","margin","display","gridTemplate","Board","squares","map","square","i","key","number","Card","selected","CardHand","cards","myPlayer","card","location","InfoPane","pickUp","game","players","player","isActive","name","socket","io","styles","position","top","left","ButtonStyles","flex","flexDirection","Game","useState","selectedCard","setSelectedCard","setMyPlayer","setGame","isAGame","setisAGame","useEffect","on","data","console","log","board","activePlayer","filter","alert","forEach","DBsquare","some","nextPlayerNum","undefined","emit","availableCards","cardNumber","Math","floor","random","length","uniqueID","prompt","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.95339d5f.chunk.js","sourcesContent":["import React from 'react'\n\nconst Square = ({ onClick, displayNumber, color }) => {\n    return <button\n    style={{\n        background: `${color}`,\n        border: '2px solid darkblue',\n        fontSize:  '30px',\n        fontWeight: '800',\n        cursor: 'pointer',\n        outline: 'none'\n      }}        \n        onClick={onClick}>\n        {displayNumber}\n    </button>\n}\n\nexport default Square","import React from 'react'\nimport Square from './Square'\n\nconst style = {\n    borderRadius: '10px',\n    width: '60vw',\n    height: '60vh',\n    margin: '0 auto',\n    display: 'grid',\n    gridTemplate: 'repeat(10, 1fr) / repeat(10, 1fr)'\n}\n\nconst Board = ({ squares, onClick }) => (\n    <div style={style}>\n        {squares.map((square, i) => (\n            <Square \n                color={square.color} \n                displayNumber={square.displayNumber} \n                key={i} number={square.number} \n                onClick={() => onClick(square)} \n            />\n        ))}\n    </div>\n)\n\nexport default Board","import React from 'react'\n\nconst Card = ({ displayNumber, number, onClick, selected }) => {\n    let color = '2px solid darkblue'\n    let amISelected = () => {\n      if (displayNumber === selected) {\n        color = '4px solid red'\n      }\n    }\n    amISelected()\n    return <button\n    style={{\n        border: `${color}`,\n        fontSize:  '30px',\n        fontWeight: '800',\n        cursor: 'pointer',\n        outline: 'none'\n      }}        \n      onClick={onClick}\n      >\n        {displayNumber}\n    </button>\n}\n\nexport default Card","import React from 'react'\nimport Card from './Card'\n\nconst CardHand = ({ cards, number, onClick, myPlayer, selected }) => {\n    let color = '2px solid darkblue'\n    let amISelected = () => {\n      if (number === selected) {\n        color = '4px solid red'\n      }\n    }\n    amISelected()\n    return <div>\n         {\n         // eslint-disable-next-line\n         cards.map((card, i) => {\n           if (card.location === myPlayer ) {\n            return <Card selected={selected} color={color} displayNumber={card.displayNumber} key={i} number={card.number} onClick={() => onClick(card.displayNumber)} />\n           }\n         }\n        )}\n    </div>\n}\n\nexport default CardHand","import React from 'react'\nimport CardHand from './CardHand'\n\nconst style = {\n    borderRadius: '10px',\n    width: '20vw',\n    height: '20vh',\n    margin: '0 left'\n}\n\n\n\nconst InfoPane = ({ pickUp, cards, game, myPlayer, onClick, selected }) => (\n    <div style={style}>\n        {game.players.map((player, i) => (\n            player.isActive ?\n            <p>It is {player.name}'s turn</p>\n            :\n            <p></p>\n        ))}\n            <CardHand \n            myPlayer={myPlayer} \n            cards={cards}\n            selected={selected} \n            onClick={onClick}  \n            />\n    <button onClick={pickUp}>\n        Pick up\n    </button>\n    </div>\n)\n\nexport default InfoPane","import React, { useState, useEffect } from 'react'\nimport Board from './Board'\nimport InfoPane from './InfoPane'\nimport io from \"socket.io-client\";\nconst ENDPOINT = \"https://fivestraightserver.herokuapp.com/\";\n// const ENDPOINT = \"http://127.0.0.1:4000\"\nconst socket = io(ENDPOINT);\n\nconst styles = {\n    width: '200px',\n    position: 'absolute',\n    top: '0',\n    left: '0'\n}\n\nconst ButtonStyles = {\n    flex: 1,\n    flexDirection: 'column'\n}\n\nconst Game = () => {\n    const [selectedCard, setSelectedCard] = useState(null)\n    const [myPlayer, setMyPlayer] = useState('')\n    const [game, setGame] = useState({})\n    const [isAGame, setisAGame] = useState(false)\n\n    useEffect(() => {\n        socket.on('game.created', function (data) {\n            setGame(data);\n            console.log(data)\n            setisAGame(true); \n        });\n        socket.on('game.joined', function (data) {\n            setGame(data);\n        });\n        socket.on('cards.dealt', function (data) {\n            setGame(data);\n            setisAGame(true); \n        });\n        socket.on('turn.over', function (data) {\n            setGame(data);\n            setSelectedCard(null)\n        });\n      }, []);\n    \n    const playCard = (square) => {\n        let activePlayer = game.players.filter(player => player.isActive === true);\n        if (activePlayer[0].name !== myPlayer) return alert(\"It's not your turn, homie.\");\n        if (selectedCard == null) return;\n        if (selectedCard > square.displayNumber) return alert(`${selectedCard} is greater than ${square.displayNumber} ya dum-dum.`);\n        // eslint-disable-next-line\n        game.cards.forEach(card => {\n            if (card.displayNumber === selectedCard) {\n                card.location = \"board\";\n            }\n        })\n        // eslint-disable-next-line\n        game.board.forEach(DBsquare => {\n            if (DBsquare.displayNumber === square.displayNumber) {\n                DBsquare.color = activePlayer[0].color;\n            }\n        })\n        // eslint-disable-next-line\n        game.players.some((player, i) => {\n            console.log(player.name, i)\n            if (player.isActive === true) {\n                game.players[i].isActive = false;\n                let nextPlayerNum = i+1;\n                if (game.players[nextPlayerNum] !== undefined) {\n                    game.players[nextPlayerNum].isActive = true\n                    return true;\n                } else {\n                    game.players[0].isActive = true\n                }\n            }\n        })\n        socket.emit('play.card', game)\n    }\n\n    const handleCardSelect = (number) => {\n        setSelectedCard(number)\n    }\n\n    const newGame = () => {\n        let name = prompt(\"What is your name?\");\n        setMyPlayer(name)\n        socket.emit('create.game', name)\n    }\n\n    const joinGame = () => {\n        let name = prompt(\"What is your name?\")\n        let game = prompt(\"What is the unique ID of the game you're joining?\")\n        let data = {\n            name: name,\n            game: game\n        }\n        setMyPlayer(data.name);\n        console.log(data.game)\n        socket.emit('join.game', data)\n    }\n\n    const dealCards = () => {\n        socket.emit('deal.cards', game)\n    }\n\n    const pickupCard = () => {\n        let activePlayer = game.players.filter(player => player.isActive === true);\n        if (activePlayer[0].name !== myPlayer) return alert(\"It's not your turn, homie.\");\n        // todo don't let them pick up if they have 4 cards\n        game.players.forEach(player => {\n            if (player.isActive === true) {\n                let availableCards = game.cards.filter(card => card.location === \"deck\");\n                let randomNumber = Math.floor(Math.random() * availableCards.length);\n                let cardNumber = availableCards[randomNumber].displayNumber\n                let card2deal = game.cards.filter(card => card.displayNumber === cardNumber)\n                card2deal[0].location = player.name;\n                }\n            })\n        // eslint-disable-next-line\n        game.players.some((player, i) => {\n            console.log(player.name, i)\n\n            // set the active player to be the next player, \n            // or if we're already on the last player, set it to the first player\n\n            if (player.isActive === true) {\n                game.players[i].isActive = false;\n                let nextPlayerNum = i+1;\n                console.log(game.players[nextPlayerNum])\n                if (game.players[nextPlayerNum] !== undefined) {\n                    game.players[nextPlayerNum].isActive = true\n                    return true;\n                } else {\n                    console.log(game.players[0])\n                    game.players[0].isActive = true\n                }\n            }\n        })\n        socket.emit('pickup.card', game)\n    }\n\n\n    return (\n        <>{}\n        <>\n        {isAGame ?\n            <div styles={styles}>\n             <Board squares={game.board} onClick={playCard} />\n            <InfoPane \n                      game={game}\n                      selected={selectedCard} \n                      cards={game.cards} \n                      onClick={handleCardSelect}\n                      pickUp={pickupCard}\n                      myPlayer={myPlayer}\n                      />\n            <p>The ID for this game is {game.uniqueID}</p>\n            <h1>Players:</h1>\n            {\n                game.players.map(player => (\n                        <p>{player.name}: {player.color}</p>\n                ))\n            }\n            </div>\n            :\n            <div>Welcome to 5Straight </div>\n            }\n        </>\n            \n            \n            <div style={ButtonStyles}>\n                <button onClick={newGame}>Create a Game</button>\n                <button onClick={joinGame}>Join a Game</button>\n                <button onClick={dealCards}>Deal dem Cards</button>\n            </div>\n            \n            \n            \n        </>\n    )\n}\n\nexport default Game","import React from 'react'\nimport Game from './components/Game'\n\nconst App = () => <Game />\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}